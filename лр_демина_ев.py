# -*- coding: utf-8 -*-
"""ЛР - Демина ЕВ.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iosqXZIuJfgoBqWamxkPbAUSGKqv14UT

# Лабораторная работа №1

1) Создать 2D массив А размерностью [7x4] (7 строк, 4 столбца),
заполненный нулям
"""

import numpy as np

A = np.zeros((7, 4))
print(A)

"""2) Создать одномерный массив В длины 7, заполненный единицами"""

B = np.ones(7)
print(B)

"""3) В одномерном массиве заменить значения 2-го, 3-го и 5-го элементов на 0"""

B[[1, 2, 4]] = 0
print(B)

"""4) Заполнить 2-ой столбец двумерного массива числами от 1 до 7"""

A[:, 1] = np.arange(1, 8)
print(A)

"""5) Заполнить 3-й столбец двумерного массива числами от 7 до 1"""

A[:, 2] = np.arange(7, 0, -1)
print(A)

"""6) Заполнить 4-й столбец двумерного массива значениями элементов
одномерного массива
"""

A[:, 3] = B
print(A)

"""7) Найти максимальное, минимальное, среднее значения, дисперсию и сумму
элементов вдоль оси 0 двумерного массива
"""

max_num = A.max(axis=0)
min_num = A.min(axis=0)
mean_num = A.mean(axis=0)
dispers_num = A.var(axis=0)
summa_num = A.sum(axis=0)

print("Максимальное значение:", max_num)
print("Минимальное значение:", min_num)
print("Среднее значение:", mean_num)
print("Дисперсия:", dispers_num)
print("Сумма:", summa_num)

"""9) Создать и вывести на печать двумерный массив С1 размерности [7x3], у
которого первые три элемента в каждой строке равны соответствующим
первым трем элементам в строках исходного двумерного массива А, при
условии, что четвертые элементы в строках А равны 0. Подсчитать суммы
для нового массива по осям 0 и 1
"""

C1 = np.zeros((7,3))
print(C1)

"""# *Лабораторная работа №2*

В python написать программу, которая:
- загружает таблицу из fashion-mnist-train.csv во фрейм pandas
- из фрейма выделить в отдельную переменную и распечатать на экране
заголовок таблицы, сравнить с заголовком таблицы, открытом в Excel
- распечатать на экране размеры таблицы
- загрузить данные таблицы (кроме заголовка, т.е. числовые данные) в массив
NumPy
- распечатать на экране 145 строку этого массива
- создать новый массив из данного массива, в который войдет его каждый
500-й элемент
- из нового массива создать еще один массив, в котором первый элемент
каждой строки равен 5
- распечатать 4-ю строку этого массива на экране
"""

import pandas as pd

data = pd.read_csv('fashion-mnist-train.csv')
data

head = data.columns
head

data.shape

mas = data.to_numpy ()
mas

print(mas[144]) #145-я строка массива

mas2 = mas[::500]
mas2

mas3 = mas2.copy()
mas3[:, 0] = 5
mas3

print(mas3[3])

"""# Лабораторная работа №3

1.1 Создать выборку из fashion-mnist_train.csv, состоящую из каждого 500-го
изображения, начиная с 0
"""

data2 = pd.read_csv('fashion-mnist-train.csv')
data2

df = data2.iloc[::500]
df

"""1.2 Подсчитать и вывести на экран количество изображений разных классов
(от 0 до 9 – всего 10 классов) в полученной выборке
"""

img_num = df['label'].value_counts()
print("Количество изображений разных классов в выборке:\n", img_num)

"""1.3 Вывести на экран изображения из полученной выборки – по одному для
каждого класса (любое изображение из данного класса – всего 10
изображений)
"""

import matplotlib.pyplot as plt

unique_classes = df['label'].unique()
plt.figure(figsize=(10, 10))
for i, label in enumerate(unique_classes):
    img = df[df['label'] == label].iloc[0, 1:].values
    plt.subplot(4, 3, i + 1)
    plt.imshow(img.reshape(28, 28), cmap='gray')
    plt.title(f"Class: {label}")
    plt.axis('off')
plt.tight_layout()
plt.show()